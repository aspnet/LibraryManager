# EditorConfig is awesome:http://EditorConfig.org

# top-most EditorConfig file
root = true

# Don't use tabs for indentation.
[*]
indent_style         = space
end_of_line          = crlf
insert_final_newline = true
trim_trailing_whitespace = true
# (Please don't specify an indent_size here; that has too many unintended consequences.)

file_header_template = Licensed to the .NET Foundation under one or more agreements.\nThe .NET Foundation licenses this file to you under the MIT license.

# Code files
[*.{cs,csx,vb,vbx}]
indent_size = 4

# Xml project files
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj,msbuild}]
indent_size = 2

# Xml config files
[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct}]
indent_size = 2

# JSON files
[*.json]
indent_size = 2

# Dotnet code style settings:
[*.{cs,vb}]
# Sort using and Import directives with System.* appearing first
dotnet_sort_system_directives_first                             = true

# Avoid "this." and "Me." if not necessary
dotnet_style_qualification_for_field                            = false : suggestion
dotnet_style_qualification_for_property                         = false : suggestion
dotnet_style_qualification_for_method                           = false : suggestion
dotnet_style_qualification_for_event                            = false : suggestion

# Use language keywords instead of framework type names for type references
dotnet_style_predefined_type_for_locals_parameters_members      = true : suggestion
dotnet_style_predefined_type_for_member_access                  = true : suggestion

# Suggest more modern language features when available
dotnet_style_object_initializer                                 = true : suggestion
dotnet_style_collection_initializer                             = true : suggestion
dotnet_style_coalesce_expression                                = true : suggestion
dotnet_style_null_propagation                                   = true : suggestion
dotnet_style_explicit_tuple_names                               = true : suggestion

# Naming rules - properties must use PascalCase
dotnet_naming_rule.properties_must_use_pascal_case.severity = warning
dotnet_naming_rule.properties_must_use_pascal_case.symbols  = properties
dotnet_naming_rule.properties_must_use_pascal_case.style    = pascal_case_style

dotnet_naming_symbols.properties.applicable_kinds           = property

# Naming rules - static fields must use PascalCase
dotnet_naming_rule.static_fields_must_be_pascal_cased.symbols   = static_field_symbols
dotnet_naming_rule.static_fields_must_be_pascal_cased.style     = pascal_case_style
dotnet_naming_rule.static_fields_must_be_pascal_cased.severity  = warning

dotnet_naming_symbols.static_field_symbols.applicable_kinds     = field
dotnet_naming_symbols.static_field_symbols.required_modifiers   = static,shared

# Naming rules - private fields must start with an underscore
dotnet_naming_rule.field_must_start_with_underscore.symbols     = private_fields
dotnet_naming_rule.field_must_start_with_underscore.style       = start_underscore_style
dotnet_naming_rule.field_must_start_with_underscore.severity    = warning

dotnet_naming_symbols.private_fields.applicable_kinds           = field
dotnet_naming_symbols.private_fields.applicable_accessibilities = private

# Naming Styles
dotnet_naming_style.pascal_case_style.capitalization            = pascal_case

dotnet_naming_style.start_underscore_style.capitalization       = camel_case
dotnet_naming_style.start_underscore_style.required_prefix      = _

# CSharp code style settings:
[*.cs]
# Don't prefer "var" when not apparent
csharp_style_var_for_built_in_types                   = false : warning
csharp_style_var_when_type_is_apparent                = true : suggestion
csharp_style_var_elsewhere                            = false : warning

# Prefer method-like constructs to have a block body
csharp_style_expression_bodied_methods                = false : none
csharp_style_expression_bodied_constructors           = false : none
csharp_style_expression_bodied_operators              = false : none

# Prefer property-like constructs to have an expression-body
csharp_style_expression_bodied_properties             = true : none
csharp_style_expression_bodied_indexers               = true : none
csharp_style_expression_bodied_accessors              = true : none

# Suggest more modern language features when available
csharp_style_pattern_matching_over_is_with_cast_check = true : suggestion
csharp_style_pattern_matching_over_as_with_null_check = true : suggestion
csharp_style_inlined_variable_declaration             = true : suggestion
csharp_style_throw_expression                         = true : suggestion
csharp_style_conditional_delegate_call                = true : suggestion

# Newline settings
csharp_new_line_before_open_brace                     = all
csharp_new_line_before_else                           = true
csharp_new_line_before_catch                          = true
csharp_new_line_before_finally                        = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types     = true
