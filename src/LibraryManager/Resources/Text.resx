<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="FileDeleted" xml:space="preserve">
    <value>{0} deleted</value>
    <comment>Shows in Output Window when a library file is deleted</comment>
  </data>
  <data name="FileDeleteFail" xml:space="preserve">
    <value>Failed to delete {0}</value>
    <comment>Shows in Output Window when a file failed to be deleted</comment>
  </data>
  <data name="FileWrittenToDisk" xml:space="preserve">
    <value>{0} written to destination</value>
    <comment>Shows in Output Window when a file was successfully added to project</comment>
  </data>
  <data name="Restore_RestoreOfLibraryStarted" xml:space="preserve">
    <value>Restoring library {0}...</value>
  </data>
  <data name="Restore_NumberOfLibrariesSucceeded" xml:space="preserve">
    <value>{0} libraries restored in {1} seconds</value>
    <comment>Status message</comment>
  </data>
  <data name="Restore_OperationHasErrors" xml:space="preserve">
    <value>One or more libraries failed to restore</value>
    <comment>Status message</comment>
  </data>
  <data name="LibraryInfoUpdateFailed" xml:space="preserve">
    <value>Failed to update library information for {0}</value>
  </data>
  <data name="FailedToDownloadCatalog" xml:space="preserve">
    <value>Failed to download catalog from provider "{0}"</value>
  </data>
  <data name="Restore_LibraryRestoreCancelled" xml:space="preserve">
    <value>Restore was cancelled for library {0}</value>
  </data>
  <data name="Restore_NumberOfLibrariesFailed" xml:space="preserve">
    <value>{0} libraries failed to restore</value>
  </data>
  <data name="Clean_OperationCancelled" xml:space="preserve">
    <value>Clean libraries operation was cancelled</value>
  </data>
  <data name="Clean_NumberOfLibrariesFailed" xml:space="preserve">
    <value>{0} libraries failed to be deleted</value>
  </data>
  <data name="Clean_OperationStarted" xml:space="preserve">
    <value>Clean libraries operation started</value>
  </data>
  <data name="Clean_NumberOfLibrariesSucceeded" xml:space="preserve">
    <value>{0} libraries were successfully deleted in {1} secs</value>
    <comment>Status message</comment>
  </data>
  <data name="Clean_OperationFailed" xml:space="preserve">
    <value>Clean operation failed for {0} libraries</value>
  </data>
  <data name="Clean_OperationCompleted" xml:space="preserve">
    <value>Clean libraries operation completed</value>
  </data>
  <data name="Install_LibraryFailed" xml:space="preserve">
    <value>Install library {0} failed</value>
  </data>
  <data name="Install_LibraryStarted" xml:space="preserve">
    <value>Install library {0} started</value>
  </data>
  <data name="Restore_LibraryRestoreSucceeded" xml:space="preserve">
    <value>Library {0}  was successfuly restored restored</value>
  </data>
  <data name="Restore_LibrariesUptodate" xml:space="preserve">
    <value>Restore completed. Files already up-to-date</value>
    <comment>Status message</comment>
  </data>
  <data name="Restore_NumberOfLibrariesCancelled" xml:space="preserve">
    <value>{0} libraries had restore cancelled</value>
  </data>
  <data name="Restore_OperationCompleted" xml:space="preserve">
    <value>Restore operation completed</value>
  </data>
  <data name="SummaryEndLine" xml:space="preserve">
    <value>========== Finished ==========</value>
  </data>
  <data name="TimeElapsed" xml:space="preserve">
    <value>Time Elapsed: {0}</value>
  </data>
  <data name="Uninstall_LibraryStarted" xml:space="preserve">
    <value>Uninstall of library {0} started</value>
  </data>
  <data name="Update_LibraryFailed" xml:space="preserve">
    <value>Update library {0} failed</value>
  </data>
  <data name="Update_LibraryStarted" xml:space="preserve">
    <value>Update of library {0} started</value>
  </data>
  <data name="Update_LibrarySucceeded" xml:space="preserve">
    <value>Update of library {0} succeeded</value>
  </data>
  <data name="Uninstall_LibraryCancelled" xml:space="preserve">
    <value>Uninstall of library {0} has been cancelled</value>
  </data>
  <data name="Uninstall_LibraryFailed" xml:space="preserve">
    <value>Uninstall of library {0} failed</value>
  </data>
  <data name="Clean_NumberOfLibrariesCancelled" xml:space="preserve">
    <value>{0} libraries had deletion cancelled</value>
  </data>
  <data name="Restore_LibraryRestoreFailed" xml:space="preserve">
    <value>Failed to restore library: {0}</value>
  </data>
  <data name="Restore_OperationCancelled" xml:space="preserve">
    <value>Restore operation has been cancelled</value>
  </data>
  <data name="Restore_OperationFailed" xml:space="preserve">
    <value>Restore operation failed for {0} libraries</value>
  </data>
  <data name="Restore_OperationStarted" xml:space="preserve">
    <value>Restore operation started</value>
  </data>
  <data name="Uninstall_LibrarySucceeded" xml:space="preserve">
    <value>Uninstall of library {0} succeeded</value>
  </data>
  <data name="Update_LibraryCancelled" xml:space="preserve">
    <value>Update of library {0} has been cancelled</value>
  </data>
  <data name="Restore_LibrariesForProject" xml:space="preserve">
    <value>Restoring libraries for project {0}</value>
  </data>
  <data name="CdnjsLibraryIdHintText" xml:space="preserve">
    <value>Example: &lt;library&gt;@&lt;version&gt;</value>
    <comment>"&lt;library&gt;" and "&lt;version&gt;" are used to indicate placeholders.  The terms should be localized.</comment>
  </data>
  <data name="FileSystemLibraryIdHintText" xml:space="preserve">
    <value>Must be a valid filesystem path.</value>
  </data>
  <data name="UnpkgProviderHintText" xml:space="preserve">
    <value>Example: &lt;library&gt;@&lt;version&gt;</value>
    <comment>"&lt;library&gt;" and "&lt;version&gt;" are used to indicate placeholders.  The terms should be localized.</comment>
  </data>
  <data name="LibraryDetail_Unavailable" xml:space="preserve">
    <value>Unavailable</value>
  </data>
  <data name="Clean_OperationCompletedWithErrors" xml:space="preserve">
    <value>Clean operation completed with errors</value>
  </data>
  <data name="Restore_OperationCompletedWithErrors" xml:space="preserve">
    <value>Restore operation completed with errors</value>
  </data>
  <data name="Uninstall_OperationCompletedWithErrors" xml:space="preserve">
    <value>Uninstall operation completed with errors</value>
  </data>
  <data name="Upgrade_OperationCompletedWithErrors" xml:space="preserve">
    <value>Upgrade operation completed with errors</value>
  </data>
  <data name="Restore_NumberOfLibrariesUptodate" xml:space="preserve">
    <value>{0} libraries are up-to-date</value>
  </data>
  <data name="Uninstall_OperationCompleted" xml:space="preserve">
    <value>Uninstall operation completed</value>
  </data>
  <data name="Upgrade_OperationCompleted" xml:space="preserve">
    <value>Upgrade operation completed</value>
  </data>
  <data name="JsDelivrProviderHintText" xml:space="preserve">
    <value>Example: &lt;library&gt;@&lt;version&gt;</value>
    <comment>"&lt;library&gt;" and "&lt;version&gt;" are used to indicate placeholders.  The terms should be localized.</comment>
  </data>
  <data name="DownloadingFile" xml:space="preserve">
    <value>Downloading file {0}...</value>
  </data>
</root>