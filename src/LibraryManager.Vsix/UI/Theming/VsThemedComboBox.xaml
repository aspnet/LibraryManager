<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:platformUI="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0">
    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="templateRoot" BorderBrush="{DynamicResource {x:Static platformUI:CommonControlsColors.ComboBoxBorderBrushKey}}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource {x:Static platformUI:CommonControlsColors.ComboBoxBackgroundBrushKey}}" SnapsToDevicePixels="true">
                        <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                            <Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" Fill="{TemplateBinding TextElement.Foreground}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ComboBoxBackgroundBrushKey}}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ComboBoxBorderBrushKey}}"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ComboBoxSeparatorBrushKey}}"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ComboBoxSeparatorBrushKey}}"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="arrow" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ComboBoxGlyphPressedBrushKey}}"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ComboBoxBackgroundHoverBrushKey}}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ComboBoxBorderHoverBrushKey}}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ComboBoxBackgroundHoverBrushKey}}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ComboBoxBorderHoverBrushKey}}"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ComboBoxSeparatorHoverBrushKey}}"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ComboBoxSeparatorHoverBrushKey}}"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Fill" TargetName="arrow" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ComboBoxGlyphPressedBrushKey}}"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ComboBoxBackgroundPressedBrushKey}}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ComboBoxBorderPressedBrushKey}}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ComboBoxBackgroundPressedBrushKey}}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ComboBoxBorderPressedBrushKey}}"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ComboBoxSeparatorPressedBrushKey}}"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ComboBoxSeparatorPressedBrushKey}}"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="arrow" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ComboBoxGlyphDisabledBrushKey}}"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ComboBoxBackgroundDisabledBrushKey}}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ComboBoxBorderDisabledBrushKey}}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ComboBoxBackgroundBrushKey}}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ComboBoxBorderBrushKey}}"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ComboBoxSeparatorBrushKey}}"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ComboBoxSeparatorBrushKey}}"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                <platformUI:SystemDropShadowChrome x:Uid="vs:SystemDropShadowChrome_1" Name="Shdw" Color="Transparent"
                                                           MinWidth="{Binding ElementName=templateRoot, Path=ActualWidth}"
                                                           MaxHeight="{TemplateBinding MaxDropDownHeight}">
                    <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static platformUI:CommonControlsColors.ComboBoxBorderBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static platformUI:CommonControlsColors.ComboBoxBackgroundBrushKey}}">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                    <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </platformUI:SystemDropShadowChrome>
            </Popup>
            <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                <Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>
            <Trigger x:Uid="Trigger_10" Property="IsKeyboardFocusWithin" Value="true">
                <Setter x:Uid="Setter_65" TargetName="toggleButton" Property="BorderBrush" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ComboBoxSeparatorFocusedBrushKey}}" />
                <Setter x:Uid="Setter_66" TargetName="toggleButton" Property="Background" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ComboBoxGlyphBackgroundFocusedBrushKey}}" />
                <Setter x:Uid="Setter_67" TargetName="toggleButton" Property="TextElement.Foreground" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ComboBoxGlyphFocusedBrushKey}}" />
                <Setter x:Uid="Setter_68" TargetName="templateRoot" Property="Background" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ComboBoxBackgroundFocusedBrushKey}}" />
                <Setter x:Uid="Setter_70" Property="TextElement.Foreground" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ComboBoxTextFocusedBrushKey}}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ComboBoxBackgroundBrushKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ComboBoxTextBrushKey}}" />
        <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ComboBoxTextInputSelectionBrushKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                <platformUI:SystemDropShadowChrome x:Uid="Shdw" Name="Shdw" Color="Transparent"
                                               MinWidth="{Binding ElementName=templateRoot,Path=ActualWidth}"
                                               MaxHeight="{TemplateBinding MaxDropDownHeight}">
                    <Border x:Name="dropDownBorder"
                            BorderThickness="1"
                            BorderBrush="{DynamicResource {x:Static platformUI:CommonControlsColors.ComboBoxBorderBrushKey}}"
                            Background="{DynamicResource {x:Static platformUI:CommonControlsColors.ComboBoxBackgroundBrushKey}}">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="canvas"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        Height="0"
                                        Width="0">
                                    <Rectangle x:Name="opaqueRect"
                                               Fill="{Binding Background, ElementName=dropDownBorder}"
                                               Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                               Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter"
                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </platformUI:SystemDropShadowChrome>
            </Popup>
            <ToggleButton x:Name="toggleButton"
                          Grid.ColumnSpan="2"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          Background="{TemplateBinding Background}"
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                          Style="{StaticResource ComboBoxToggleButton}"/>
            <Border x:Name="border"
                    Background="{DynamicResource {x:Static platformUI:CommonControlsColors.ComboBoxBackgroundBrushKey}}"
                    Margin="{TemplateBinding BorderThickness}">
                <TextBox x:Name="PART_EditableTextBox"
                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                         IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                         Margin="{TemplateBinding Padding}"
                         Style="{StaticResource ComboBoxEditableTextBox}"
                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                <Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>
            <Trigger x:Uid="Trigger_4" Property="IsKeyboardFocusWithin" Value="true">
                <Setter x:Uid="Setter_19" TargetName="toggleButton" Property="BorderBrush" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ComboBoxSeparatorFocusedBrushKey}}" />
                <Setter x:Uid="Setter_20" TargetName="toggleButton" Property="Background" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ComboBoxGlyphBackgroundFocusedBrushKey}}" />
                <Setter x:Uid="Setter_21" TargetName="toggleButton" Property="TextElement.Foreground" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ComboBoxGlyphFocusedBrushKey}}" />
                <Setter x:Uid="Setter_22" TargetName="border" Property="Background" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ComboBoxBackgroundFocusedBrushKey}}" />
                <Setter x:Uid="Setter_23" TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ComboBoxBorderFocusedBrushKey}}" />
                <Setter x:Uid="Setter_24" Property="TextElement.Foreground" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ComboBoxTextFocusedBrushKey}}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ComboBoxBackgroundBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ComboBoxBorderBrushKey}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ComboBoxTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="6,3,5,3"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ComboBoxItem}">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ComboBoxTextBrushKey}}" />
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ComboBoxSelectionBrushKey}}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Padding" Value="2"/>
                <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
