steps:
- checkout: self
  clean: true

- task: UseDotNet@2
  displayName: Install .NET Core SDK

- ${{ if eq(variables['system.collectionId'], '011b8bdf-6d56-4f87-be0d-0092136884d9') }}:
  - template: /azure-pipelines/azure-pipeline.microbuild.before.yml@self

- script: dotnet --info
  displayName: Show dotnet SDK info

- task: NuGetAuthenticate@1
  displayName: 'Authenticate with NuGet'

- task: PowerShell@2
  displayName: 'dotnet restore'
  inputs:
    targetType: 'inline'
    script: 'dotnet restore --nologo'

- task: MSBuild@1
  inputs:
    solution: LibraryManager.sln
    msbuildArguments: >
      /r
      /p:Configuration=Release /p:DeployExtension=false /p:ZipPackageCompressionLevel=normal
      /v:m
      /bl:"$(Build.ArtifactStagingDirectory)/build_logs/msbuild.binlog"

- task: DotNetCoreCLI@2
  displayName: Run tests
  inputs:
    command: test
    projects: "**/*.Test.csproj"
    arguments: --configuration $(BuildConfiguration) --no-build --filter "TestCategory!=FailsInCloudTest" -v n
  condition: and(succeeded(), ne(variables['SignType'], 'real'))

- ${{ if eq(variables['system.collectionId'], '011b8bdf-6d56-4f87-be0d-0092136884d9') }}:
  - template: /azure-pipelines/azure-pipeline.microbuild.after.yml@self

- ${{ if eq(variables['system.collectionId'], '011b8bdf-6d56-4f87-be0d-0092136884d9') }}:
  - powershell: |
      New-Item -ItemType Directory ${env:Build_ArtifactStagingDirectory}\locAssets
  - powershell: |
      Copy-Item src\LibraryManager.Vsix\Commands\CommandTable\LocalizationFiles\VSCommandTable.en.xlf src\LibraryManager.Vsix\Commands\CommandTable\LocalizationFiles\VSCommandTable.xlf
  - powershell: |
      Copy-Item src\LibraryManager.Vsix\source.extension.en.resx src\LibraryManager.Vsix\source.extension.resx
  - task: OneLocBuild@2
    env:
      SYSTEM_ACCESSTOKEN: $(System.AccessToken)
    inputs:
      locProj: 'Localize/LocProject.json'
      outDir: '$(Build.ArtifactStagingDirectory)\locAssets'
      repoType: github
      gitHubPatVariable: '$(OneLocGitHubPat)'
      prSourceBranchPrefix: 'locfiles'
      isAutoCompletePrSelected: false
      packageSourceAuth: patAuth
      dependencyPackageSource: $(LocDependencyPackageSource)
    condition: ne(variables['Build.Reason'], 'PullRequest')

- task: CopyFiles@1
  inputs:
    contents: |
      artifacts/**/*.nupkg
      bin/**/*.vsix
    targetFolder: $(Build.ArtifactStagingDirectory)/artifacts
    flattenFolders: true
  displayName: Collecting build artifacts
